// <auto-generated />
using System;
using IoT_REST_API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IoT_REST_API.Migrations
{
    [DbContext(typeof(Context))]
    partial class TemperatureContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IoT_REST_API.Models.Measurement", b =>
                {
                    b.Property<long>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("MeasureDate");

                    b.Property<DateTime>("MeasureTime");

                    b.Property<int>("Temperature");

                    b.Property<long>("TemperatureSensorId");

                    b.HasKey("MeasurementId");

                    b.HasIndex("TemperatureSensorId");

                    b.ToTable("Measurement");
                });

            modelBuilder.Entity("IoT_REST_API.Models.TemperatureSensor", b =>
                {
                    b.Property<long>("TemperatureSensorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceModel")
                        .IsRequired();

                    b.Property<string>("DeviceName")
                        .IsRequired();

                    b.Property<bool>("IsOnline");

                    b.Property<string>("LocationName")
                        .IsRequired();

                    b.HasKey("TemperatureSensorId");

                    b.ToTable("TemperatureSensor");
                });

            modelBuilder.Entity("IoT_REST_API.Models.Measurement", b =>
                {
                    b.HasOne("IoT_REST_API.Models.TemperatureSensor", "TemperatureSensor")
                        .WithMany("Measurements")
                        .HasForeignKey("TemperatureSensorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
